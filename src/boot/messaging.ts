import { boot } from "quasar/wrappers";
import { initializeApp } from "firebase/app";
import { getMessaging, getToken, onMessage } from "firebase/messaging"
import { KOptions } from "./komunitin"
import axios from "axios";

// Firebase config object. Code autogenerated by Firebase console at
// Project settings > General > Web app > SDK setup & configuration.
// https://firebase.google.com/docs/web/setup#config-objectConfig = 
export const firebaseConfig = {
  apiKey: "AIzaSyBz8Rsnm1B3l5beoJnrBXjt51tbighCaF8",
  authDomain: "komunitin-project.firebaseapp.com",
  projectId: "komunitin-project",
  storageBucket: "komunitin-project.appspot.com",
  messagingSenderId: "990869913594",
  appId: "1:990869913594:web:2e38aa78fe6d27c8986e43",
  measurementId: "G-RYZMRW1QKC"
};

export default boot(async () => {
  // Get registration token. Initially this makes a network call, once retrieved
  // subsequent calls to getToken will return from cache.
  const app = initializeApp(firebaseConfig);
  const messaging = getMessaging(app);
  const vapidKey = process.env.PUSH_SERVER_KEY;
  const serviceWorkerRegistration = await window.navigator.serviceWorker.getRegistration()
  try {
    const token = await getToken(messaging, { 
      vapidKey,
      serviceWorkerRegistration
    });
    // Send token to the server.
    return axios.post(KOptions.url.notifications + '/devices', token);

  } catch (err) {
    // The user doesn't grant the app to receive notifications.
    console.error('An error occurred while retrieving token. ', err);
  }
  onMessage(messaging, (payload) => {
    console.log("Received foreground message.", payload);
  })
});